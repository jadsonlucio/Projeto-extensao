import statsmodels.api as sm
import numpy as np
from statsmodels.iolib.summary import summary

array=[2.706, 2.56, 3.078, 3.624, 2.434, 1.981, 2.25, 2.593, 4.081, 3.868, 3.547, 3.269, 4.005, 3.835, 3.759, 3.83, 4.205, 3.954, 2.702, 3.283, 3.854, 4.056, 3.638, 3.596, 3.545, 3.838, 3.499, 3.276, 3, 2.797, 2.713, 2.65, 3.01, 2.354, 3.152, 3.182, 2.732, 2.724, 3.426, 3.726, 3.961, 4.056, 3.448, 4.346, 4.557, 4.712, 4.671, 4.925, 4.928, 4.681, 5.055, 4.33, 5.218, 5.389, 5.483, 5.354, 4.913, 4.6, 4.301, 3.979, 4.885, 4.598, 4.546, 3.984, 3.846, 4.177, 3.988, 3.445, 3.847, 4.17, 3.753, 3.849, 3.215, 4.288, 3.06, 3.977, 3.103, 3.633, 2.267, 3.301, 2.533, 2.909, 3.175, 2.546, 1.993, 3.463, 3.188, 3.801, 3.164, 3.134, 4.022, 5.641, 6.5, 6.07, 6.404, 6.637, 6.266, 6.411, 6.755, 6.376, 6.516, 6.761, 6.406, 6.544, 7.056, 6.978, 6.876, 6.77, 7.21, 6.186, 5.907, 5.782, 5.184, 5.173, 5.715, 5.413, 5.226, 4.674, 4.825, 5.079, 5.723, 5.376, 5.877, 5.548, 5.56, 5.27, 5.63, 6.144, 5.222, 5.9, 5.29, 5, 4.907, 5.189, 4.451, 4.157, 4.358, 4.56, 4.873, 5.113, 4.453, 4.307, 4.07, 4.5, 4.16, 4.319, 3.877, 3.893, 3.245, 3.209, 3.531, 3.042, 2.924, 2.85, 2.998, 2.337, 1.862, 2.14, 1.824, 1.909, 2.434, 2.441, 2.24, 1.526, 2.24, 1.924, 1.916, 1.384, 1.823, 2.018, 2.266, 2.551, 2.316, 2.467, 2.928, 2.906, 2.607, 2.241, 2.259, 2.555, 2.303, 2.404, 2.553, 3.035, 3.769, 5.114, 5.978, 5.533, 5.729, 5.48, 4.279, 5.074, 4.976, 4.225, 4.952, 4.112, 3.727, 3.651, 3.666, 3.148, 3.61, 3.122, 3.134, 2.444, 2.972, 2.495, 2.85, 2.209, 1.738, 2.646, 2.085, 2.506, 1.678, 2.238, 1.954, 1.388, 1.534, 1.057, 2.642, 1.392, 1.925, 1.607, 2.742, 3.135, 2.267, 2.041, 1.334, 3.051, 2.73, 1.652, 1.575, 1.563, 1.517, 1.596, 1.254, 2.012, 2.28, 2.829, 3.606, 3.408, 3.149, 2.57, 3.307, 5.051, 6.213, 7.167, 5.613, 6.701, 6.717, 7.307, 6.818, 5.721, 7.174, 6.264, 6.741, 5.841, 5.515, 5.377, 4.965, 5.571, 5.225, 5.158, 6.156, 5.304, 4.97, 4.959, 4.767, 5.387, 5.197, 6.207, 5.55, 5.508, 5.298, 5.441, 5.509, 5.408, 6.268, 6.248, 5.75, 5.306, 5.338, 4.991, 5.385, 4.899, 5.161, 5.372, 5.842, 6.339, 6.788, 6.882, 6.615, 6.425, 6.296, 6.185, 6.209, 5.917, 5.672, 4.986, 5.782, 5.515, 5.197, 4.734, 4.443, 4.169, 3.505, 1.857, 1.536, 1.111, 2.276, 2.934, 2.449, 2.12, 2.218, 2.163, 2.188, 2.262, 1.895, 2.243, 2.045, 2.061, 1.586, 1.766, 1.658, 2.453, 2.698, 2.089, 1.831, 2.491, 3.833, 3.815, 3.081, 3.213, 3.282, 2.794, 2.74, 3.482, 2.786, 2.652, 2.877, 2.359, 2.754, 2.398, 2.352, 2.9, 1.615, 2.234, 2.428, 2.295, 1.263, 2.09, 1.87, 1.5, 2.374, 2.324, 2.363, 2.842, 2.079, 2.614, 2.891, 0.965, 1.561, 2.628, 2.335, 2.209, 2.521, 2.378, 2.651, 2.822, 2.429, 3.574, 2.635, 2.44, 2.429, 1.712, 2.026, 4.02, 3.368, 3.397, 4.019, 3.21, 3.187, 4.853, 4.864, 5.901, 4.998, 4.673, 3.936, 4.798, 3.294, 3.605, 3.178, 2.354, 1.822, 2.131, 2.142, 1.887, 1.75, 1.064, 1.074, 0.631, 1.517, 2.438, 2.059, 1.633, 1.34, 2.472, 3.121, 3.134, 4.219, 3.838, 4.212, 4.353, 4.368, 4.012, 4.765, 4.125, 4.447, 4.947, 4.345, 4.217, 4.395, 3.641, 3.337, 3.114, 3.558, 2.889, 3.709, 4.291, 4.799, 4.513, 3.815, 3.323, 3.421, 3.157, 3.191, 2.602, 2.785, 2.679, 2.357, 2.16, 2.316, 2.614, 2.89, 3.017, 2.564, 2.687, 1.682, 1.288, 1.642, 1.464, 1.45, 1.764, 1.925, 1.818, 1.851, 2.16, 2.424, 1.681, 1.591, 2.239, 2.816, 2.627, 2.834, 3.127, 3.343, 2.817, 2.932, 3.087, 2.61, 2.357, 1.911, 2.138, 1.873, 1.942, 1.673, 1.158, 1.715, 1.654, 1.904, 1.896, 1.673, 2.051, 1.292, 1.636, 1.976, 1.593, 1.809, 1.566, 1.717, 0.864, 1.394, 1.003, 1.213, 1.176, 1.052, 1.097, 2.117, 2.098, 1.313, 1.84, 1.801, 2.07, 2.198, 1.624, 3.084, 2.185, 2.59, 2.756, 1.918, 3.125, 2.959, 2.767, 2.984, 2.711, 3.065, 2.401, 4.338, 4.233, 3.451, 3.406, 2.966, 5.348, 5.739, 6.093, 5.439, 6.163, 6.135, 5.818, 6.049, 5.46, 4.994, 4.481, 5.057, 5.168, 5.623, 5.863, 5.346, 4.738, 5.216, 5.004, 4.39, 4.846, 5.827, 5.115, 4.814, 5.17, 5.095, 4.026, 3.814, 2.873, 2.785, 3.994, 2.598, 2.267, 3.708, 3.843, 4.473, 4.231, 4.153, 3.68, 4.835, 5.053, 5.603, 6.518, 5.696, 5.35, 4.48, 3.621, 3.593, 3.67, 4.401, 4.012, 3.518, 3.732, 3.894, 3.632]

array2=[2.706, 2.56, 3.078, 3.624, 2.434, 1.981, 2.25, 2.593, 4.081, 3.868, 3.547, 3.269, 4.005, 3.835, 3.759, 3.83, 4.205, 3.954, 2.702, 3.283, 3.854, 4.056, 3.638, 3.596, 3.545, 3.838, 3.499, 3.276, 3, 2.797, 2.713, 2.65, 3.01, 2.354, 3.152, 3.182, 2.732, 2.724, 3.426, 3.726, 3.961, 4.056, 3.448, 4.346, 4.557, 4.712, 4.671, 4.925, 4.928, 4.681, 5.055, 4.33, 5.218, 5.389, 5.483, 5.354, 4.913, 4.6, 4.301, 3.979, 4.885, 4.598, 4.546, 3.984, 3.846, 4.177, 3.988, 3.445, 3.847, 4.17, 3.753, 3.849, 3.215, 4.288, 3.06, 3.977, 3.103, 3.633, 2.267, 3.301, 2.533, 2.909, 3.175, 2.546, 1.993, 3.463, 3.188, 3.801, 3.164, 3.134, 4.022, 5.641, 6.5, 6.07, 6.404, 6.637, 6.266, 6.411, 6.755, 6.376, 6.516, 6.761, 6.406, 6.544, 7.056, 6.978, 6.876, 6.77, 7.21, 6.186, 5.907, 5.782, 5.184, 5.173, 5.715, 5.413, 5.226, 4.674, 4.825, 5.079, 5.723, 5.376, 5.877, 5.548, 5.56, 5.27, 5.63, 6.144, 5.222, 5.9, 5.29, 5, 4.907, 5.189, 4.451, 4.157, 4.358, 4.56, 4.873, 5.113, 4.453, 4.307, 4.07, 4.5, 4.16, 4.319, 3.877, 3.893, 3.245, 3.209, 3.531, 3.042, 2.924, 2.85, 2.998, 2.337, 1.862, 2.14, 1.824, 1.909, 2.434, 2.441, 2.24, 1.526, 2.24, 1.924, 1.916, 1.384, 1.823, 2.018, 2.266, 2.551, 2.316, 2.467, 2.928, 2.906, 2.607, 2.241, 2.259, 2.555, 2.303, 2.404, 2.553, 3.035, 3.769, 5.114, 5.978, 5.533, 5.729, 5.48, 4.279, 5.074, 4.976, 4.225, 4.952, 4.112, 3.727, 3.651, 3.666, 3.148, 3.61, 3.122, 3.134, 2.444, 2.972, 2.495, 2.85, 2.209, 1.738, 2.646, 2.085, 2.506, 1.678, 2.238, 1.954, 1.388, 1.534, 1.057, 2.642, 1.392, 1.925, 1.607, 2.742, 3.135, 2.267, 2.041, 1.334, 3.051, 2.73, 1.652, 1.575, 1.563, 1.517, 1.596, 1.254, 2.012, 2.28, 2.829, 3.606, 3.408, 3.149, 2.57, 3.307, 5.051, 6.213, 7.167, 5.613, 6.701, 6.717, 7.307, 6.818, 5.721, 7.174, 6.264, 6.741, 5.841, 5.515, 5.377, 4.965, 5.571, 5.225, 5.158, 6.156, 5.304, 4.97, 4.959, 4.767, 5.387, 5.197, 6.207, 5.55, 5.508, 5.298, 5.441, 5.509, 5.408, 6.268, 6.248, 5.75, 5.306, 5.338, 4.991, 5.385, 4.899, 5.161, 5.372, 5.842, 6.339, 6.788, 6.882, 6.615, 6.425, 6.296, 6.185, 6.209, 5.917, 5.672, 4.986, 5.782, 5.515, 5.197, 4.734, 4.443, 4.169, 3.505, 1.857, 1.536, 1.111, 2.276, 2.934, 2.449, 2.12, 2.218, 2.163, 2.188, 2.262, 1.895, 2.243, 2.045, 2.061, 1.586, 1.766, 1.658, 2.453, 2.698, 2.089, 1.831, 2.491, 3.833, 3.815, 3.081, 3.213, 3.282, 2.794, 2.74, 3.482, 2.786, 2.652, 2.877, 2.359, 2.754, 2.398, 2.352, 2.9, 1.615, 2.234, 2.428, 2.295, 1.263, 2.09, 1.87, 1.5, 2.374, 2.324, 2.363, 2.842, 2.079, 2.614, 2.891, 0.965, 1.561, 2.628, 2.335, 2.209, 2.521, 2.378, 2.651, 2.822, 2.429, 3.574, 2.635, 2.44, 2.429, 1.712, 2.026, 4.02, 3.368, 3.397, 4.019, 3.21, 3.187, 4.853, 4.864, 5.901, 4.998, 4.673, 3.936, 4.798, 3.294, 3.605, 3.178, 2.354, 1.822, 2.131, 2.142, 1.887, 1.75, 1.064, 1.074, 0.631, 1.517, 2.438, 2.059, 1.633, 1.34, 2.472, 3.121, 3.134, 4.219, 3.838, 4.212, 4.353, 4.368, 4.012, 4.765, 4.125, 4.447, 4.947, 4.345, 4.217, 4.395, 3.641, 3.337, 3.114, 3.558, 2.889, 3.709, 4.291, 4.799, 4.513, 3.815, 3.323, 3.421, 3.157, 3.191, 2.602, 2.785, 2.679, 2.357, 2.16, 2.316, 2.614, 2.89, 3.017, 2.564, 2.687, 1.682, 1.288, 1.642, 1.464, 1.45, 1.764, 1.925, 1.818, 1.851, 2.16, 2.424, 1.681, 1.591, 2.239, 2.816, 2.627, 2.834, 3.127, 3.343, 2.817, 2.932, 3.087, 2.61, 2.357, 1.911, 2.138, 1.873, 1.942, 1.673, 1.158, 1.715, 1.654, 1.904, 1.896, 1.673, 2.051, 1.292, 1.636, 1.976, 1.593, 1.809, 1.566, 1.717, 0.864, 1.394, 1.003, 1.213, 1.176, 1.052, 1.097, 2.117, 2.098, 1.313, 1.84, 1.801, 2.07, 2.198, 1.624, 3.084, 2.185, 2.59, 2.756, 1.918, 3.125, 2.959, 2.767, 2.984, 2.711, 3.065, 2.401, 4.338, 4.233, 3.451, 3.406, 2.966, 5.348, 5.739, 6.093, 5.439, 6.163, 6.135, 5.818, 6.049, 5.46, 4.994, 4.481, 5.057, 5.168, 5.623, 5.863, 5.346, 4.738, 5.216, 5.004, 4.39, 4.846, 5.827, 5.115, 4.814, 5.17, 5.095, 4.026, 3.814, 2.873, 2.785, 3.994, 2.598, 2.267, 3.708, 3.843, 4.473, 4.231, 4.153, 3.68, 4.835, 5.053, 5.603, 6.518, 5.696, 5.35, 4.48, 3.621, 3.593, 3.67, 4.401, 4.012, 3.518, 3.732, 3.894, 3.632]
new_array=[2*valor for valor in array2]
new_array_2=[valor/2 for valor in array2]
array_f=np.array([new_array]).reshape(576,1)

print(array_f.shape)
model_fit=sm.OLS(array,array_f).fit()
result=model_fit.predict([1,2])
print(model_fit.rsquared)
